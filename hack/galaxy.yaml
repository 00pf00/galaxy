apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: galaxy
  name: galaxy
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: galaxy
  template:
    metadata:
      labels:
        app: galaxy
    spec:
      hostNetwork: true
      hostPID: true
      containers:
      - image: docker.oa.com:8080/library/galaxy:1.0.0-alpha
        imagePullPolicy: Always
        name: galaxy
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          privileged: true
        volumeMounts:
        - name: galaxy-run
          mountPath: /var/run/galaxy/
        - name: flannel-run
          mountPath: /run/flannel
        - name: kube-config
          mountPath: /etc/kubernetes/
        - mountPath: /opt/cni/bin
          name: cni-bin-dir
        - name: galaxy-log
          mountPath: /data/galaxy/logs
        - name: galaxy-etc
          mountPath: /etc/galaxy
        - name: galaxy-cni-etc
          mountPath: /etc/cni/net.d
      terminationGracePeriodSeconds: 30
      volumes:
      - name: galaxy-run
        hostPath:
          path: /var/run/galaxy
      - name: flannel-run
        hostPath:
          path: /run/flannel
      - name: kube-config
        hostPath:
          path: /etc/kubernetes/
      - name: cni-bin-dir
        hostPath:
          path: /opt/cni/bin
      - name: galaxy-log
        emptyDir: {}
      - configMap:
          defaultMode: 420
          name: galaxy-etc
        name: galaxy-etc
      - configMap:
          defaultMode: 420
          name: galaxy-cni-etc
        name: galaxy-cni-etc
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: galaxy-etc
  namespace: kube-system
data:
  galaxy.json: |
    {
      "NetworkConf":[{"cniVersion":"0.2.0","name":"tke-route-eni","type":"tke-route-eni","eni":"eth1","routeTable":1}],
      "DefaultNetworks": ["tke-route-eni"]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: galaxy-cni-etc
  namespace: kube-system
data:
  galaxy.conf: |
    {
      "type": "galaxy-sdn",
      "capabilities": {"portMappings": true}
    }